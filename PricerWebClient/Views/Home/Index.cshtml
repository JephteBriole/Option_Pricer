@using PricerWebClient.Models
@model OptionInputViewModel

@{
    ViewBag.Title = "Home Page";
 }

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

<br/>
<div>
    <div id="divOption">
        <details open="open">
            <summary><strong><u>Pricing</u></strong></summary><br />
            <div id="divInput">
                @using (Ajax.BeginForm("CalculatePrice", "HomeController", new AjaxOptions {OnFailure = "OnFailure", OnSuccess = "OnSuccess", UpdateTargetId = "divResult", HttpMethod = "POST"}, new { @id="formInput"}))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <p>
                        <Table>
                            <tr>
                                <td style="border:0.1px solid; margin-bottom:20px; width:250px;">@Html.LabelFor(m => m.Spot)</td>
                                <td>&nbsp;</td>
                                <td style="border:0.1px solid;">
                                    @Html.TextBoxFor(m => m.Spot)
                                    @Html.ValidationMessageFor(m => m.Spot, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr><td></td></tr>
                            <tr>
                                <td style="border:0.1px solid;">@Html.LabelFor(m => m.Strike)</td>
                                <td>&nbsp;</td>
                                <td style="border:0.1px solid;"> 
                                    @Html.TextBoxFor(m => m.Strike)
                                    @Html.ValidationMessageFor(m => m.Strike, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr><td></td></tr>
                            <tr>
                                <td style="border:0.1px solid;">@Html.LabelFor(m => m.Volatility)</td>
                                <td>&nbsp;</td>
                                <td style="border:0.1px solid;">
                                    @Html.TextBoxFor(m => m.Volatility)
                                    @Html.ValidationMessageFor(m => m.Volatility, "", new { @class = "text-danger" }) 
                                </td>
                            </tr>
                            <tr><td></td></tr>
                            <tr>
                                <td style="border:0.1px solid;">@Html.LabelFor(m => m.InterestRate)</td>
                                <td>&nbsp;</td>
                                <td style="border:0.1px solid; margin-bottom:5px">
                                    @Html.TextBoxFor(m => m.InterestRate)
                                    @Html.ValidationMessageFor(m => m.InterestRate, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr><td></td></tr>
                            <tr>
                                <td style="border:0.1px solid;">@Html.LabelFor(m => m.Maturity)</td>
                                <td>&nbsp;</td>
                                <td style="border:0.1px solid;">
                                    @Html.TextBoxFor(m => m.Maturity)
                                    @Html.ValidationMessageFor(m => m.Maturity, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                            <tr><td></td></tr>
                            <tr>
                                <td style="border:0.1px solid;">@Html.LabelFor(m => m.NbrSimulations)</td>
                                <td>&nbsp;</td>
                                <td style="border:0.1px solid;">
                                    @Html.TextBoxFor(m => m.NbrSimulations)
                                    @Html.ValidationMessageFor(m => m.NbrSimulations, "", new { @class = "text-danger" })
                                </td>
                            </tr>
                        </Table>
                    </p>
                    <p>
                        <input type="submit" name="Compute" value="Calculate" id="btnCompute" class="ButtonStyle" style="font-weight:bold;width:80px;" />
                    </p>

                    <div id="divMsg"></div>
                }

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")

                    <script type="text/javascript">

                        function OnSuccess(data) {
                            //$("#divMsg").append("<br/>Success");
                            //$("#divMsg").show();

                            $("#divResult").html(data);
                            //$("#divResult").show();

                        }

                        function OnFailure() {
                            $("#divMsg").append("<br/>Failed");
                            $("#divMsg").show();
                        }
                    </script>
                }
            </div>

            <div id="divResult"></div>
        </details>
    </div>
    <br/>
    <div id="divDetails">
        <details>
            <summary><strong><u>Details</u></strong></summary><br />
            <p>
                Monte Carlo Method for Option Pricing

                The price of the underlying instrument is usually modelled such that it follows a geometric Brownian motion with constant drift µ and volatility σ. So :

                <strong>dS(t) = µS(t)dt + σS(t)dW(t)</strong><br />
                where <br />
                <strong>&emsp;&emsp;&emsp;&nbsp;dW(t)</strong> is found via a random sampling from a normal distribution
            </p>
        </details>
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>  